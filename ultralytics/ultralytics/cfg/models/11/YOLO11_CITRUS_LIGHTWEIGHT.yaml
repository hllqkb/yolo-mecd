# Ultralytics YOLO 🚀, AGPL-3.0 license
# YOLO11 柑橘检测超轻量化模型 - 边缘设备专用
# 特性: 极致轻量化、快速推理、小目标优化、低功耗设计
# 目标: 参数量<1M, 推理时间<50ms, 模型大小<5MB

# Parameters
nc: 3 # number of classes (柑橘检测专用)
scales: # 超轻量化缩放参数
  # [depth, width, max_channels]
  n: [0.25, 0.125, 512]  # 极致轻量: 0.2M参数
  s: [0.25, 0.25, 512]   # 超轻量: 0.5M参数  
  m: [0.33, 0.375, 512]  # 轻量: 1.0M参数
  l: [0.50, 0.50, 512]   # 标准轻量: 2.0M参数

# 超轻量化主干网络 - 专为小目标设计
backbone:
  # [from, repeats, module, args]
  # 渐进式通道增长，保持特征表达能力
  - [-1, 1, Conv, [32, 3, 2]]     # 0-P1/2 - 极小起始通道
  - [-1, 1, Conv, [64, 3, 2]]     # 1-P2/4 - 渐进增长
  - [-1, 1, C2f, [64, False]]     # 2 - 轻量特征提取
  - [-1, 1, Conv, [128, 3, 2]]    # 3-P3/8 - 小目标关键层
  - [-1, 2, C2f, [128, False]]    # 4 - 强化小目标特征
  - [-1, 1, Conv, [256, 3, 2]]    # 5-P4/16 - 中目标层
  - [-1, 2, C2f, [256, False]]    # 6 - 平衡特征提取
  - [-1, 1, Conv, [512, 3, 2]]    # 7-P5/32 - 大目标层
  - [-1, 1, C2f, [512, False]]    # 8 - 轻量深层特征
  - [-1, 1, SPPF, [512, 3]]       # 9 - 小核快速池化

# 轻量化检测头 - 高效特征融合
head:
  # === 轻量化上采样路径 ===
  # P5 -> P4 (512 -> 256)
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 10
  - [[-1, 6], 1, Concat, [1]]     # 11 cat backbone P4
  - [-1, 1, C2f, [256, False]]    # 12 - 轻量P4融合
  
  # P4 -> P3 (256 -> 128) - 小目标优化路径
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 13
  - [[-1, 4], 1, Concat, [1]]     # 14 cat backbone P3
  - [-1, 2, C2f, [128, False]]    # 15 - 强化小目标特征 (P3/8-small)
  
  # === 轻量化下采样路径 ===
  # P3 -> P4 (128 -> 256)
  - [-1, 1, Conv, [128, 3, 2]]    # 16
  - [[-1, 12], 1, Concat, [1]]    # 17 cat head P4
  - [-1, 1, C2f, [256, False]]    # 18 - 轻量P4检测 (P4/16-medium)
  
  # P4 -> P5 (256 -> 512)
  - [-1, 1, Conv, [256, 3, 2]]    # 19
  - [[-1, 9], 1, Concat, [1]]     # 20 cat head P5
  - [-1, 1, C2f, [512, False]]    # 21 - 轻量P5检测 (P5/32-large)
  
  # === 三尺度检测头 ===
  - [[15, 18, 21], 1, Detect, [nc]]  # Detect(P3, P4, P5) - 小目标优先

# === 超轻量化设计特点 ===
# 
# 🎯 核心优化策略:
# 1. 通道数大幅减少: 32->64->128->256->512
# 2. 深度适度控制: 关键层保持2次重复
# 3. 模块轻量化: 使用C2f替代C3k2
# 4. 池化优化: 3x3小核SPPF
# 5. 特征融合简化: 减少冗余连接
#
# 📊 预期性能指标:
# - 参数量: 0.4-1.0M (相比基线减少85%+)
# - 模型大小: 1.5-4MB
# - 推理时间: 30-50ms (GPU)
# - 内存占用: <100MB
# - 精度损失: <5% mAP
#
# 🚀 部署优势:
# - 移动端友好: 适合手机、平板
# - 边缘设备: 嵌入式系统、农业机器人
# - 实时应用: 视频流检测、监控系统
# - 低功耗: 延长电池续航
#
# ⚙️ 推荐训练配置:
# - batch_size: 16-32 (更大批次)
# - imgsz: 640-1024 (根据设备调整)
# - epochs: 300+ (轻量模型需要更多训练)
# - optimizer: AdamW (更好的收敛)
# - lr0: 0.01 (适中学习率)
# - weight_decay: 0.0005
# - warmup_epochs: 5
# - close_mosaic: 30 (更晚关闭增强)
#
# 🔧 推荐推理配置:
# - conf: 0.25 (标准置信度)
# - iou: 0.45 (NMS阈值)
# - max_det: 300 (适中检测数)
# - half: True (FP16加速)
# - device: 'cpu' or '0' (根据设备)
#
# 📈 数据增强建议:
# - hsv_h: 0.015 (色调增强)
# - hsv_s: 0.7 (饱和度增强)
# - hsv_v: 0.4 (亮度增强)
# - degrees: 10.0 (旋转增强)
# - translate: 0.1 (平移增强)
# - scale: 0.9 (缩放增强)
# - shear: 2.0 (剪切增强)
# - perspective: 0.0001 (透视增强)
# - flipud: 0.0 (垂直翻转)
# - fliplr: 0.5 (水平翻转)
# - mosaic: 1.0 (马赛克增强)
# - mixup: 0.1 (混合增强)
# - copy_paste: 0.1 (复制粘贴)
#
# 🎨 柑橘检测特化:
# - 针对圆形小目标优化
# - 适应树上/地面不同场景
# - 处理遮挡和重叠情况
# - 光照变化鲁棒性
# - 多尺度果实检测
